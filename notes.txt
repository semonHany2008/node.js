                             javaScript
 - using + operator between two strings will concatenate the strings, but using other operators the strings will be implicitly converted into numbers including (NaN)
 - variables declared using let, var, const all are function block, while let and const only are scope block
 - variables are temporarily storing units, unlike the databases. as the variables store its values in RAM, while databases values stored into hard desk.
 - accessing element that is not exist in an array will print undefined.
 - previusly, in concatenation if the very first term was number the operation will be addition else it will be concat
   ,but now whatever the first term type it will be concatenation.
 - while accessing elements in list using bracket-notation we can't use negative indexes,
   ,but using methods like splice() we can use [-1, -2, -3, ...] to access elements from the end.
 - splice method role with list: Add, remove, or replace items in place. Extract part of an array.
 - reassigning a separate element from an array or string doesn't affect the original list, so we use splice() for replacing in list.
 - we use Object.assign(target, source) to take a value copy, because the direct assignment for object is a reference copy any change in the copied one will affect the original.
 - 'let i of list' iterate on the list elements but not with object
   ,while 'let i in list||object' iterate on keys.

                              Git
 - git is part of 'version control system' used to track changes made on file and enable accessing previous version.
 - its repo is local, unlike the github whose repo are global.
 * dealing with cmd(command line): 
   - 'cd' stands for change direction used to change the current path. it acts as a function with the new path as a parameter.
   - '.' refers to the current folder, while '..' refers to the previous folder in the relative path.
   - absolute path starts from the very first container (c:).
   - if the path contains spaces we put the whole path into double quotation.
   - the command 'dir' stands for directory used to show all available files in the current folder.
   - the command 'explorer.exe' open the current folder.
   - the command 'code .' open the current folder with VScode.
   - the command 'cursor .' open the current folder with cursor IDE.
   - 'mkdir folder_name' stands for 'make directory' used to create new folder.
   - the command 'git init' intialize an empty local repository.
   - 'git add .' add the files of the current folder to git. used when any changes are made.
   - 'git status' show if the current folder added to git or not.
   - there's an extension in VScode show the status of the file if ('U' untracked, 'A' added, 'M' modified, 'R' index renamed)
   - 'git commit -m "..."' used to send a message with any added changes to describe it.
   - 'git commit -am "..."' used to add changes and send a message with it in one command, but the file must be tracked and added already into git.
  - use powershell instead of cmd for more extensions and privileges.
  - 'git remote add origin ${repo path ended with .git}' add the current folder into github repo.
  - 'git branch -M main' used to make master branch(the default of git app) a main branch
  - 'git push -u origin main' used at the first time to push the git folder into github repository and later used to push any new changes.
  - 'git pull origin main --allow-unrelated-histories' used to merge the manual added file to github with ones added be git local repo.
  - 'git rm file_name' remove a file from git repo.
  - 'git mv -f file_name target_folder' move a file from the current folder(source) to the target.
    with the flag -f will overwrite the destination file if exist already.

                              npm
- 'npm update' or 'npm upgrade' used to update installed libraries
- 'npm uninstall' delete installed library

                            node.js
- for exporting, importing from modules we use 'module.exports=property or method to be shared' in the source,
  'require(source file path)' in the target file then store the returned file content into variable.
-install the library readline to create an interface for taking input from user.
*status code:
  -401:unauthorized, 201: success and create, 403:forbidden
- when the key will be the same as the variable_name including its value we just write the variable_name directly.
- event loop: javaScript follow async approach in execution (single-threaded), but some functions like setTimeOut follow the webAPI service to be syncronous be waiting in an aside thread(libuv) until it's ready to execute and go to event queue, then to the call-stack.
- when the url error is in the endpoind the noFound page appear by the server
  , while when the error is in the domain the browser itself show the notFound page.
- we use the promise to make the code syncronous, then we tend to use async-await logic to wait the promise to be executed.

                          client req
- header: contains sensitive data like: authorization:'Bearer 3887', Content-Type:'application/json', accept:'application/json', accept-language:'ar-EG, en-US'.
- body: contains the data sent with post, put or patch requests.
- query: a string after ? contains the query parameters.
- params: Found after a ? in the URL. Usually written as key-value pairs separated by &.

                           express
- when we run express server we must use nodemon not the normal node keyword.
- when we send body to API request, we send it in the form of stringified json.
- using fs module to readFileSync() or writeFileSync() to read and write data stored into an external json file, we must use JSON.parse() and JSON.stringify().